apiVersion: v1
kind: Template
metadata:
  annotations:
    description: "A Golang hello-world app"
  creationTimestamp: null
  name: fossul-framework
objects:     
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Hello world
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - port: 8000
      targetPort: 8000
    selector:
      app: ${APPLICATION_NAME}  
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      template.openshift.io/expose-uri: http://{.spec.host}{.spec.path}
    name: ${APPLICATION_NAME}
  spec:
    host: ${APPLICATION_DOMAIN}
    to:
      kind: Service
      name: ${APPLICATION_NAME}  
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: "${APPLICATION_NAME}"
    name: "${APPLICATION_NAME}" 
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: "${APPLICATION_NAME}:latest"
    runPolicy: Serial
    source:
      git:
        uri: "${SOURCE_REPOSITORY_URL}" 
        ref: "${SOURCE_REPOSITORY_REF}"
        contextDir: "${CONTEXT_DIR}"
        type: Git
    strategy:
      dockerStrategy:
        dockerfilePath: src/hello/Dockerfile
        from:
          kind: ImageStreamTag
          name: fedora:latest
      type: Docker
    triggers:
    - github:
        secret: _Rn6FzszP2wVCdy5gn5A
      type: GitHub
    - generic:
        secret: lDMTxQXebRt4VBgwXZ-f
      type: Generic
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      template.alpha.openshift.io/wait-for-ready: "true"
    name: "${APPLICATION_NAME}" 
  spec:
    replicas: 1
    selector:
      app: "${APPLICATION_NAME}"
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: "${APPLICATION_NAME}"
      spec:
        containers:
        - env:
          - name: MY_KEY
            value: "foobar"
          image: ' '
          imagePullPolicy: IfNotPresent
          name: "${APPLICATION_NAME}"
          terminationMessagePath: /dev/termination-log
          ports:
          -containerPort: 8080
        dnsPolicy: ClusterFirst
        restartPolicy: Always
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - "${APPLICATION_NAME}"
        from:
          kind: ImageStreamTag
          name: "${APPLICATION_NAME}:latest"
        lastTriggeredImage: ""
      type: ImageChange
    - type: ConfigChange
  status: {}  
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    generation: 1
    labels:
      app: "${APPLICATION_NAME}"
    name: "${APPLICATION_NAME}"
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations: null
      importPolicy: {}
      name: latest
      referencePolicy:
        type: ""
  status:
    dockerImageRepository: "" 
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
    generation: 2
    labels:
      app: "${APPLICATION_NAME}"
    name: fedora
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/imported-from: fedora:latest
      from:
        kind: DockerImage
        name: fedora:latest
      generation: 2
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Source
parameters:
  - name: APPLICATION_NAME
    displayName: Application Name
    description: the name and label for all components
    value: go-hello-world
    required: true 
  - name: APPLICATION_DOMAIN
    displayName: Application Domain
    description: Application domain name used in route to service
  - name: SOURCE_REPOSITORY_URL
    displayName: Source Repository URL
    description: The URL of the repository with your application source code
    value: https://github.com/ktenzer/go-hello-world.git
    required: true      
  - name: CONTEXT_DIR
    displayName: Context Dir
    description: Context Dir
    value: src/hello
    required: true                
  - name: SOURCE_REPOSITORY_REF
    displayName: Source Repository Reference Tag
    description: The Branch tag to use
    value: master